plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version "0.8.12"
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

apply from: "${rootProject.projectDir}/flavors.gradle"

android {
    namespace 'com.example.composeplayground'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.composeplayground"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunner "com.example.composeplayground.navtest.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    with flavorConfig
}

dependencies {
    implementation(project(":feature:login"))
    implementation(project(":feature:support"))
    implementation(project(":feature:ticketing"))
    implementation(project(":library:commons"))
    implementation(project(":library:session"))
    implementation(project(":library:ui"))

    implementation 'androidx.navigation:navigation-runtime-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-compose:2.6.0'

    implementation "com.google.dagger:hilt-android:2.44"
    implementation 'androidx.test:runner:1.5.2'
    kapt "com.google.dagger:hilt-compiler:2.44.2"

    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")
    // ...with Java.
    androidTestAnnotationProcessor("com.google.dagger:hilt-android-compiler:2.44")
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44@aar")
    implementation("com.google.dagger:hilt-android-testing:2.44@aar")


    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.4.3")
//// Needed for createAndroidComposeRule, but not createComposeRule:
//    debugImplementation("androidx.compose.ui:ui-test-manifest:1.4.3")

    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha10"

    implementation "com.google.accompanist:accompanist-flowlayout:0.27.0"

    implementation "com.google.code.gson:gson:2.9.0"

    implementation "androidx.datastore:datastore:1.0.0"
    // Starting from Protobuf 3.8.0, use the lite runtime library
    implementation "com.google.protobuf:protobuf-javalite:3.19.2"

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.4.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
}

protobuf {
    // Configures the Protobuf compilation and the protoc executable
    protoc {
        // Downloads from the repositories
        artifact = "com.google.protobuf:protoc:3.19.2"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Configures the task output type
                java {
                    // Java Lite has smaller code size and is recommended for Android
                    option 'lite'
                }
            }
        }
    }
}